// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login.proto

/*
Package loginrpc is a generated protocol buffer package.

It is generated from these files:
	login.proto

It has these top-level messages:
	LoginRequest
	LoginReply
*/
package loginrpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type LoginRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Uid  int64  `protobuf:"varint,2,opt,name=uid" json:"uid,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// The response message containing the greetings
type LoginReply struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *LoginReply) Reset()                    { *m = LoginReply{} }
func (m *LoginReply) String() string            { return proto.CompactTextString(m) }
func (*LoginReply) ProtoMessage()               {}
func (*LoginReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "loginrpc.LoginRequest")
	proto.RegisterType((*LoginReply)(nil), "loginrpc.LoginReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LoginRpc service

type LoginRpcClient interface {
	// Sends a login
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error)
}

type loginRpcClient struct {
	cc *grpc.ClientConn
}

func NewLoginRpcClient(cc *grpc.ClientConn) LoginRpcClient {
	return &loginRpcClient{cc}
}

func (c *loginRpcClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginReply, error) {
	out := new(LoginReply)
	err := grpc.Invoke(ctx, "/loginrpc.LoginRpc/Login", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for LoginRpc service

type LoginRpcServer interface {
	// Sends a login
	Login(context.Context, *LoginRequest) (*LoginReply, error)
}

func RegisterLoginRpcServer(s *grpc.Server, srv LoginRpcServer) {
	s.RegisterService(&_LoginRpc_serviceDesc, srv)
}

func _LoginRpc_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginRpcServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/loginrpc.LoginRpc/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginRpcServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoginRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "loginrpc.LoginRpc",
	HandlerType: (*LoginRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _LoginRpc_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login.proto",
}

func init() { proto.RegisterFile("login.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4f, 0xcf,
	0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x73, 0x8a, 0x0a, 0x92, 0x95, 0x4c,
	0xb8, 0x78, 0x7c, 0x40, 0xec, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96,
	0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x80, 0x8b,
	0xb9, 0x34, 0x33, 0x45, 0x82, 0x49, 0x81, 0x51, 0x83, 0x39, 0x08, 0xc4, 0x54, 0x52, 0xe3, 0xe2,
	0x82, 0xea, 0x2a, 0xc8, 0xa9, 0x14, 0x92, 0xe0, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x87,
	0x69, 0x83, 0x71, 0x8d, 0x9c, 0xb9, 0x38, 0x20, 0xea, 0x0a, 0x92, 0x85, 0xcc, 0xb9, 0x58, 0xc1,
	0x6c, 0x21, 0x31, 0x3d, 0x98, 0xed, 0x7a, 0xc8, 0x56, 0x4b, 0x89, 0x60, 0x88, 0x17, 0xe4, 0x54,
	0x2a, 0x31, 0x24, 0xb1, 0x81, 0xdd, 0x6c, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x93, 0xad,
	0x8f, 0xc2, 0x00, 0x00, 0x00,
}
