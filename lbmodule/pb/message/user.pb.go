// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The request message containing the user's name.
type LoginMsgRequest struct {
	Uid int64 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
}

func (m *LoginMsgRequest) Reset()                    { *m = LoginMsgRequest{} }
func (m *LoginMsgRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginMsgRequest) ProtoMessage()               {}
func (*LoginMsgRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *LoginMsgRequest) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

// The response message containing the greetings
type LoginMsgReply struct {
	Result int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
}

func (m *LoginMsgReply) Reset()                    { *m = LoginMsgReply{} }
func (m *LoginMsgReply) String() string            { return proto.CompactTextString(m) }
func (*LoginMsgReply) ProtoMessage()               {}
func (*LoginMsgReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *LoginMsgReply) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*LoginMsgRequest)(nil), "message.LoginMsgRequest")
	proto.RegisterType((*LoginMsgReply)(nil), "message.LoginMsgReply")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 110 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x55,
	0x52, 0xe6, 0xe2, 0xf7, 0xc9, 0x4f, 0xcf, 0xcc, 0xf3, 0x2d, 0x4e, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x2e, 0xcd, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e,
	0x02, 0x31, 0x95, 0xd4, 0xb9, 0x78, 0x11, 0x8a, 0x0a, 0x72, 0x2a, 0x85, 0xc4, 0xb8, 0xd8, 0x8a,
	0x52, 0x8b, 0x4b, 0x73, 0x4a, 0xc0, 0xaa, 0x58, 0x83, 0xa0, 0xbc, 0x24, 0x36, 0xb0, 0xe9, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0x87, 0x13, 0x93, 0x6b, 0x00, 0x00, 0x00,
}
